class Solution {
public:
    vector<vector<int>> merge(vector<vector<int>>& intervals) {
        sort(intervals.begin(),intervals.end());
        stack<pair<int,int>>st;
        for(int i=0;i<intervals.size();i++)
        {
            if(st.empty())
            {
                st.push({intervals[i][0],intervals[i][1]});
            }
            else if(!st.empty() && st.top().second >= intervals[i][0])
            {
                pair<int,int>temp=st.top();
                st.pop();
                st.push({temp.first,max(intervals[i][1],temp.second)});
            }
            else{
                st.push({intervals[i][0],intervals[i][1]});
            }
        }
        vector<vector<int>>result;
        while(!st.empty())
        {
            result.push_back({st.top().first,st.top().second});
            st.pop();
        }
        reverse(result.begin(),result.end());
        return result;
    }
};
